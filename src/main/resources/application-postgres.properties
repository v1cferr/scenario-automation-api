# ===================================================================
# CONFIGURAÇÃO POSTGRESQL DATABASE
# Para usar: .\mvnw.cmd spring-boot:run -Dspring.profiles.active=postgres
# ===================================================================

# Configuração do PostgreSQL Database
spring.datasource.url=jdbc:postgresql://localhost:5432/scenario_automation_db
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Pool de conexões
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# Configurações JPA/Hibernate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Configurações da aplicação
server.port=8080
spring.application.name=scenario-automation-api

# JWT Secret Key
app.jwt.secret=scenarioAutomationSecretKeyForJWTTokenGeneration2024ScenarioAutomationAPI
app.jwt.expiration=86400000

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.try-it-out-enabled=true
springdoc.packages-to-scan=com.scenario.automation.controller

# Logging
logging.level.com.scenario.automation=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
